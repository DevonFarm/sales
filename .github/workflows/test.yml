name: Test Suite

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - &setup-go
        name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: "1.25"
      - &setup-task
        name: Install task runner
        uses: go-task/setup-task@v1

      - name: Run unit tests
        run: task test-unit

      - name: Generate coverage report
        run: |
          go test -coverprofile=coverage.out ./utils/... ./horse/... ./user/... ./farm/...
          go tool cover -html=coverage.out -o coverage.html

      - name: Upload coverage to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.html

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - *setup-go
      - *setup-task
      - &setup-ci
        name: Install go-migrate & db cert
        run: task setup-ci
        env:
          COCKROACH_CLUSTER_ID: ${{ vars.COCKROACH_CLUSTER_ID }}

      - &db-migrate
        name: Run migrations
        env:
          MIGRATIONS_DSN: ${{ secrets.TEST_DATABASE_URL }}
        run: |
          # go-migrate needs to use cockroachdb, not postgres
          export MIGRATIONS_DSN=${MIGRATIONS_DSN/postgres/cockroachdb}
          task db-migrate

      - name: Run integration tests
        env:
          TEST_DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
        run: task test-integration

  handler-tests:
    name: HTTP Handler Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - *setup-go
      - *setup-task
      - name: Run handler tests
        run: task test-handlers

  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - *setup-go
      - *setup-task
      - *setup-ci
      - name: Set up Node.js
        uses: actions/setup-node@v5
        with:
          node-version-file: tests/e2e/.node-version
          cache: "npm"
          cache-dependency-path: tests/e2e/package-lock.json
      - *db-migrate
      - name: Install E2E test dependencies
        working-directory: tests/e2e
        run: npm install
      - name: Run E2E tests
        working-directory: tests/e2e
        env:
          TEST_DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
          TEST_STYTCH_PROJECT_ID: ${{ secrets.TEST_STYTCH_PROJECT_ID }}
          TEST_STYTCH_SECRET: ${{ secrets.TEST_STYTCH_SECRET }}
        run: npm run test
      - name: Upload E2E test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: tests/e2e/playwright-report/
          retention-days: 30

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - *setup-go
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest
          args: --timeout=5m
